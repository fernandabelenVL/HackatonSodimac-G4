{"version":3,"sources":["Components/Home.jsx","Components/SatisfactionClients.jsx","Components/SingleTracking.jsx","Components/ProductsList.jsx","Components/SingleClientData.jsx","Components/VerticalTracking.jsx","Components/AccordionInformation.jsx","Components/SingleOrder.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","Container","className","Row","Col","xs","md","ms","Form","Group","controlId","id","Control","type","placeholder","required","minLength","maxLength","size","Text","to","Button","href","Component","SatisfactionClients","Label","name","htmlFor","action","as","rows","variant","useStyles","makeStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","CustomizedSteppers","classes","React","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","Stepper","alternativeLabel","map","label","Step","key","onClick","StepLabel","length","Typography","step","getStepContent","disabled","color","ProductsList","Table","bordered","hover","src","alt","target","rel","class","SingleClientData","state","orders","client_name","price","value","min","max","actionsContainer","resetContainer","padding","VerticalTracker","orientation","index","StepContent","Paper","square","elevation","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","ControlledExpansionPanels","expanded","setExpanded","handleChange","panel","event","isExpanded","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","SingleOrder","data","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc43ba00.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\n\nclass Home extends Component {\n   render() {\n      return (\n         <div>\n            <Container>\n               <section className='login-panel'>\n                  <div className='title'>\n                     <b>Seguimiento de tu compra</b>\n                     <p>\n                        Para mayor información acerca de tu orden debes iniciar\n                        sesión o registrarte\n                     </p>\n                  </div>\n\n                  <Row>\n                     <Col xs={12} md={6} ms={6}>\n                        <Form className='search-form'>\n                           <Form.Group controlId='formBasic'>\n                              <h4 id='title-one'>\n                                 Consulta el estado de tu compra\n                              </h4>\n                              <p>\n                                 Ingresa el número de orden de tu compra online\n                                 o de tienda\n                              </p>\n                              <Form.Control\n                                 id='form-controlOne'\n                                 type='text'\n                                 placeholder=' Ej:12345678901'\n                                 required\n                                 minLength='11'\n                                 maxLength='11'\n                                 size='11'\n                              />\n                              <Form.Text className='text-muted'>\n                                 Si no conoces tu número de orden, solicítalo al\n                                 600 600 4020 a nuestros ejecutivos Sodimac.\n                              </Form.Text>\n                           </Form.Group>\n\n                           <Link to='/singleorder'>\n                              <Button className='btn btn-red'>\n                                 Consultar estado de orden\n                              </Button>\n                           </Link>\n                        </Form>\n                     </Col>\n                     <Col xs={12} md={6}>\n                        <Form className='login-form'>\n                           <div className='header-login-form'>\n                              <b>\n                                 Accede para ver el detalle completo de tu compra\n                              </b><br/>\n                              <p><a\n                                 href='/sodimac-cl/myaccount/login?companyFlag=true&amp;successUrl=/myaccount/orderList'\n                              >\n                                 Iniciar sesión como empresa\n                              </a></p>\n                           </div>\n                           <div className=\"login-cont\">\n                           <b>Inicia sesión como usuario persona</b>\n                           <div className=\"login-input\">\n                           \n                           <Form.Group controlId='formBasicEmail'>\n                              <p>Email</p>\n                              <Form.Control\n                                 type='email'\n                                 placeholder='Ingresa tu e-mail'\n                                 required\n                              />\n                           </Form.Group>\n                           <Form.Group controlId='formBasicPassword'>\n                              <p>Contraseña</p>\n                              <Form.Control\n                                 type='password'\n                                 placeholder='******'\n                                 required\n                              />\n                           </Form.Group>\n                           <Form.Text className='text-muted forgot-pass' >\n                                 <a href='/'>Olvidaste tu contraseña ?</a>\n                           </Form.Text>\n                           <div className='buttonsinform'>\n                              <button type='button'className='btn btn-white'>\n                                 Regístrate\n                              </button>\n\n                              <button type='button' className='btn btn-red'>\n                                 Ingresar\n                              </button>\n                           </div>                           \n\n\n                           </div>\n                           \n                           \n                        </div>\n\n                        </Form>\n                     </Col>\n                  </Row>\n               </section>\n            </Container>\n         </div>\n      );\n   }\n}\n\nexport default Home;\n","//CSS\nimport { Form, Button } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport './Evaluations.css';\n\nclass SatisfactionClients extends Component {\n  render() {\n    return (\n    \n      <section className=\"evaluation-box\">\n          <h4>\n            ¿Como evaluaría su satisfacción respecto al servicio entregado?\n          </h4>\n\n          <Form.Group controlId=\"formBasic\">\n            <Form.Label>Envío</Form.Label>\n            <form className=\"stars\">\n\n              <input className=\"star star-5\" id=\"star-5\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-5\" htmlFor=\"star-5\"></label>\n              <input className=\"star star-4\" id=\"star-4\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-4\" htmlFor=\"star-4\"></label>\n              <input className=\"star star-3\" id=\"star-3\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-3\" htmlFor=\"star-3\"></label>\n              <input className=\"star star-2\" id=\"star-2\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-2\" htmlFor=\"star-2\"></label>\n              <input className=\"star star-1\" id=\"star-1\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-1\" htmlFor=\"star-1\"></label>\n             </form>\n\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasic1\">\n            <Form.Label>Servicio al Cliente</Form.Label>\n\n            <form className=\"stars1\" action=\"\">\n              <input className=\"star star-5\" id=\"star-10\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-5\" htmlFor=\"star-10\"></label>\n              <input className=\"star star-4\" id=\"star-9\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-4\" htmlFor=\"star-9\"></label>\n              <input className=\"star star-3\" id=\"star-8\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-3\" htmlFor=\"star-8\"></label>\n              <input className=\"star star-2\" id=\"star-7\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-2\" htmlFor=\"star-7\"></label>\n              <input className=\"star star-1\" id=\"star-6\" type=\"radio\" name=\"star\"/>\n              <label className=\"star star-1\" htmlFor=\"star-6\"></label>\n            </form>\n\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasics2\">\n            <Form.Label>Producto</Form.Label>\n\n            <form className=\"stars2\">\n                <input className=\"star star-5\" id=\"star-15\" type=\"radio\" name=\"star\"/>\n                <label className=\"star star-5\" htmlFor=\"star-15\"></label>\n                <input className=\"star star-4\" id=\"star-14\" type=\"radio\" name=\"star\"/>\n                <label className=\"star star-4\" htmlFor=\"star-14\"></label>\n                <input className=\"star star-3\" id=\"star-13\" type=\"radio\" name=\"star\"/>\n                <label className=\"star star-3\" htmlFor=\"star-13\"></label>\n                <input className=\"star star-2\" id=\"star-12\" type=\"radio\" name=\"star\"/>\n                <label className=\"star star-2\" htmlFor=\"star-12\"></label>\n                <input className=\"star star-1\" id=\"star-11\" type=\"radio\" name=\"star\"/>\n                <label className=\"star star-1\" htmlFor=\"star-11\"></label>\n            </form>\n            </Form.Group>\n\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\" className=\"section-comment\">\n            <Form.Label>Muchas gracias. ¿Le gustaría agregar algo?</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Enviar\n          </Button>\n      </section>\n    \n    );\n  }\n}\n\nexport default SatisfactionClients;\n\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SatisfactionClients from \"./SatisfactionClients\"\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: \"100%\"\n   },\n   button: {\n      marginRight: theme.spacing(1)\n   },\n   instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n   }\n}));\n\nfunction getSteps() {\n   return [\n      \"Orden de compra recibida\",\n      \"Compra confirmada\",\n      \"Preparando el despacho\",\n      \"Listo para despacho\",\n      \"En Ruta\",\n      \"Entregado\"\n   ];\n}\n\nfunction getStepContent(step) {\n   switch (step) {\n      case 0:\n         return \"Tu orden a sido recibida por el sistema\";\n      case 1:\n         return \"Tu compra se encuentra en proceso de confirmación.\";\n      case 2:\n         return \"¡Tu compra ha sido confirmada! Estamos preparando tus productos para enviarlos a despacho\";\n      case 3:\n         return \"Hemos preparado tu orden, ahora estamos gestionando el despacho a tu dirección. \";\n      case 4:\n         return \"¡Tus productos están en ruta hacia la dirección de despacho! Serán entregados por el camión de patente AFNA10 y llegará en unos pocos minutos.\";\n      case 5:\n         return \"Orden en proceso de entrega\";\n      default:\n         return \"Orden de despacho finalizada\";\n   }\n}\n\nexport default function CustomizedSteppers() {\n   const classes = useStyles();\n   const [activeStep, setActiveStep] = React.useState(1);\n   const steps = getSteps();\n\n   const handleNext = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n   };\n\n   const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n   };\n\n   return (\n      <div className=\"tracking-desktop\" >\n      <b>Información de seguimiento</b>\n         <Stepper alternativeLabel activeStep={activeStep}>\n            {steps.map((label) => (\n               <Step key={label} onClick={handleNext}\n                     \n               >\n      \n                  <StepLabel>{label}</StepLabel>\n               </Step>\n            ))}\n         </Stepper>\n         <div>\n            {activeStep === steps.length ? (\n               <div>\n                  <Typography className={classes.instructions}>\n                     Despacho entregado, te invitamos a realizar nuestra encuesta de satisfacción\n                     <SatisfactionClients/> \n\n                  </Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                     Reset\n                  </Button>\n               </div>\n            ) \n            : (\n               <div>\n                  <Typography className={classes.instructions}>\n                     {getStepContent(activeStep)}\n                  </Typography>\n                  <div>\n                     <Button\n                        disabled={activeStep === 0}\n                        onClick={handleBack}\n                        className={classes.button}\n                     >\n                        Back\n                     </Button>\n                     <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={handleNext}\n                        className={classes.button}\n                     >\n                        {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                     </Button>\n                  </div>\n               </div>\n            )\n            }\n         </div>\n      </div>\n   );\n}\n","import React from \"react\";\n// import data from '../data/mock-data'\n\n//CSS\nimport Table from \"react-bootstrap/Table\";\n\nclass ProductsList extends React.Component {\n  render() {\n  \treturn (\n  \t<div>\n  \t<b>Productos de la compra</b>\n  \t  <Table bordered hover className=\"desktop-table\">\n      \n      \n      <thead>\n        <tr>\n          <th>SKU</th>\n          <th>Imagen</th>\n          <th>Producto/Servicio</th>\n          <th>Unidades</th>\n          <th>Precio</th>\n          <th>Más detalles</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {/* SKU */}<td className=\"grey-bg\">363261-2</td>\n          {/* Imagen */}<td className=\"ima-box\"><img className=\"product-ima\" src=\"https://i.ibb.co/drgyDDs/meraki-box.png\" alt=\"meraki-box\"/></td>\n          {/* Producto */}<td>Cajita Meraki</td>\n          {/* Unidades */}<td>1</td>\n          {/* Precio */}<td>$20.990</td>\n          {/* Boleta */}<td><a href=\"https://www.sodimac.cl/sodimac-cl/product/363261X/combo-piscina-427x84-cm-+-bomba-530-gl\" target=\"_blank\" rel=\"noopener noreferrer\">Ver Detalles</a></td>\n        </tr>\n        {/* <tr>\n\n          <td className=\"grey-bg\">228450-2</td>\n          <td className=\"ima-box\"><img className=\"product-ima\" alt=\"Producto\" src=\"https://sodimac.scene7.com/is/image/SodimacCL/2284502_02?$producto495$&id=IconF1&fmt=jpg&fit=constrain,1&wid=493&hei=493\"/></td>\n          <td>Juego de Living de Terraza Segovia 4 Personas Homy</td>\n          <td>1</td>\n          <td>$139.990</td>\n          <td><a href=\"/singleorder\">Ver Detalles</a></td>\n          </tr>\n          <tr>\n          <td className=\"grey-bg\">356753-2</td>\n          <td className=\"ima-box\"><img className=\"product-ima\" alt=\"Producto\" src=\"https://sodimac.scene7.com/is/image/SodimacCL/3567532_01?$producto495$&id=CDBnB1&fmt=jpg&fit=constrain,1&wid=493&hei=493\"/></td>\n          <td>Quitasol Petroleo 2x3 Mt Home Collection Garden</td>\n          <td>2</td>\n          <td>$99.980</td>\n          <td><a href=\"https://www.sodimac.cl/sodimac-cl/product/3567532/Quitasol-Petroleo-2x3-Mt/3567532\" target=\"_blank\" rel=\"noopener noreferrer\">Ver Detalles</a></td>\n          </tr> */}\n          </tbody>\n        </Table>\n        \n        <section className=\"mobile-products\">\n          <div className=\"mobile-image-list\">\n            <img className=\"product-ima\" alt=\"Producto\" src=\"https://i.ibb.co/drgyDDs/meraki-box.png\"/>\n          </div>\n          <div className=\"mobile-info-product producto\">\n                    <p class=\"brand\">Meraki Technology</p>\n                    <h3 class=\"product\">Cajita Meraki</h3>\n                    <p class=\"sku\">Código: 310449-4</p>\n          </div>\n        \n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ProductsList;\n","import React, { Component } from \"react\";\nimport \"./SingleTracking.css\";\n\n//CSS\nimport { Row, Col } from \"react-bootstrap\";\n\nexport default class SingleClientData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orders: [],\n      client_name: \"\",\n      price: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"client-data-desktop\">\n        <div>\n          <Row>\n            {/* Datos de persona que compró */}\n            <Col xs={12} md={6}>\n              <p className=\"accordion-title\">Datos de Envío</p>\n              <p className=\"bold-title\">Nombre: <span className=\"normal-text\">Nataly Riquelme</span></p>\n              <p className=\"bold-title\">Email: <span className=\"normal-text\">nat.riquelme@gmail.com</span></p>\n              <p className=\"bold-title\"> Dirección de Despacho:<span className=\"normal-text\">\n                  <br></br>Mariano Sánchez Fontecilla 310, Santiago, Las Condes, Región\n                  Metropolitana\n                </span></p>\n              <p className=\"bold-title\">\n                Nombre del receptor: <span className=\"normal-text\">Nataly Riquelme</span>\n              </p>\n              <p className=\"bold-title\">\n                Costo de envío: <span className=\"normal-text\">$20.990</span>\n              </p>\n              <p className=\"bold-title\">\n                Observaciones de envío: <span className=\"normal-text\">Evento Laboratoria. Favor entregar en persona.</span>\n              </p>\n            </Col>\n\n            {/* Datos de despacho */}\n            <Col xs={12} md={6}>\n              <p className=\"accordion-title\">Información de tu orden</p>\n              <p className=\"bold-title\">Fecha de recepción:&nbsp;\n                <input\n                  type=\"date\"\n                  id=\"start\"\n                  name=\"trip-start\"\n                  value=\"2020-01-10\"\n                  min=\"2020-01-12\"\n                  max=\"2020-12-31\"\n                ></input>\n                <p className=\"text-muted\">Solo puedes cambiar la fecha de entrega dos días antes de la fecha límite</p>\n              </p>\n              <p className=\"bold-title\">\n                Hora despacho: <span className=\"normal-text\">9 a 22 horas</span>\n              </p>\n              <p className=\"bold-title\">\n                Medio de Pago: <span className=\"normal-text\">Tarjeta bancaria</span>\n              </p>\n              <p className=\"bold-title\">\n                Nº de Cuotas: <span className=\"normal-text\">1</span>\n              </p>\n              <p className=\"bold-title\">\n                Fecha de Pago: <span className=\"normal-text\">28/12/2019</span>\n              </p>\n              <p className=\"bold-title\">\n                Total compra: <span className=\"normal-text\">$129.990</span>\n              </p>\n              <p className=\"bold-title\">\n                Boleta:&nbsp;\n                <a  className=\"normal-text\" href=\"https://drive.google.com/file/d/1W4aIjhdHCGufua_TnfbltFjiXSZhwu69/view?usp=sharing\">\n                  Ver Boleta\n                </a>\n              </p>\n            </Col>\n          </Row>\n\n          <br></br>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\n// import Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SatisfactionClients from \"./SatisfactionClients\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n   return [\n      \"Orden de compra recibida\",\n      \"Compra confirmada\",\n      \"Preparando el despacho\",\n      \"Listo para despacho\",\n      \"En Ruta\",\n      \"Entregado\"\n   ];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n   case 0:\n      return \"Tu orden a sido recibida por el sistema\";\n   case 1:\n      return \"Tu compra se encuentra en proceso de confirmación.\";\n   case 2:\n      return \"¡Tu compra ha sido confirmada! Estamos preparando tus productos para enviarlos a despacho\";\n   case 3:\n      return \"Hemos preparado tu orden, ahora estamos gestionando el despacho a tu dirección. \";\n   case 4:\n    return \"¡Tus productos están en ruta hacia la dirección de despacho! Serán entregados por el camión de patente AFNA10 y llegará en unos pocos minutos.\";\n    case 5:\n      return \"Orden en proceso de entrega\";\n   default:\n      return \"Orden de despacho finalizada\";\n}\n}\n\nexport default function VerticalTracker() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n\n  return (\n    <div className=\"vertical-tracking\">\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label} onClick={handleNext}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  {/* <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button> */}\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>Despacho entregado, te invitamos a realizar nuestra encuesta de satisfacción\n          <SatisfactionClients/> \n\n          </Typography>\n          {/* <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button> */}\n        </Paper>\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ControlledExpansionPanels() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className=\"accordion-info\">\n\n      <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>Datos de Envío</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n          <p className=\"bold-title\">Nombre: <span className=\"normal-text\">Nataly Riquelme</span></p>\n              <p className=\"bold-title\">Email: <span className=\"normal-text\">nat.riquelme@gmail.com</span></p>\n              <p className=\"bold-title\"> Dirección de Despacho:<span className=\"normal-text\">\n                  <br></br>Mariano Sánchez Fontecilla 310, Santiago, Las Condes, Región\n                  Metropolitana\n                </span></p>\n              <p className=\"bold-title\">\n                Nombre del receptor: <span className=\"normal-text\">Nataly Riquelme</span>\n              </p>\n              <p className=\"bold-title\">\n                Costo de envío: <span className=\"normal-text\">$20.990</span>\n              </p>\n              <p className=\"bold-title\">\n                Observaciones de envío: <span className=\"normal-text\">Evento Laboratoria. Favor entregar en persona.</span>\n              </p>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>Información de tu orden</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n          <p className=\"bold-title\">Fecha de recepción:&nbsp;\n                <input\n                  type=\"date\"\n                  id=\"start\"\n                  name=\"trip-start\"\n                  value=\"2020-01-10\"\n                  min=\"2020-01-12\"\n                  max=\"2020-12-31\"\n                ></input>\n                <p className=\"text-muted\">Solo puedes cambiar la fecha de entrega dos días antes de la fecha límite</p>\n              </p>\n              <p className=\"bold-title\">\n                Hora despacho: <span className=\"normal-text\">9 a 22 horas</span>\n              </p>\n              <p className=\"bold-title\">\n                Medio de Pago: <span className=\"normal-text\">Tarjeta bancaria</span>\n              </p>\n              <p className=\"bold-title\">\n                Nº de Cuotas: <span className=\"normal-text\">1</span>\n              </p>\n              <p className=\"bold-title\">\n                Fecha de Pago: <span className=\"normal-text\">28/12/2019</span>\n              </p>\n              <p className=\"bold-title\">\n                Total compra: <span className=\"normal-text\">$129.990</span>\n              </p>\n              <p className=\"bold-title\">\n                Boleta:&nbsp;\n                <a  className=\"normal-text\" href=\"https://drive.google.com/file/d/1W4aIjhdHCGufua_TnfbltFjiXSZhwu69/view?usp=sharing\">\n                  Ver Boleta\n                </a>\n              </p>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport SingleClientData from \"./SingleClientData\"\nimport ProductList from \"./ProductsList\"\nimport SingleTracking from \"./SingleTracking\"\n// import SatisfactionClients from \"./SatisfactionClients\"\nimport VerticalTracking from \"./VerticalTracking\"\nimport AccordionInformation from \"./AccordionInformation\"\n\n//data\nimport data from '../data/mock-data'\nimport { Container } from \"react-bootstrap\";\n\n//CSS\nimport \"./SingleOrder.css\"\n\n\nexport default class SingleOrder extends Component {\n   \n   constructor () {\n      super();\n      this.state = {\n          data: data,\n          orders: []\n      }\n  }\n  \n  render() {\n   // const clientName = data.orders.client.name;\n   \n   \n\n   return (\n      <div>\n         <Container>\n            <div className=\"information-box\">\n               {/* Titulo del bloque: numero de orden */}\n               <h4>Información número de orden:</h4>\n               <b>123456789</b>\n               <br></br>\n            </div>\n            <ProductList/>\n            <SingleTracking/>\n            <VerticalTracking/>\n            <SingleClientData/>\n            <AccordionInformation/>\n         </Container>\n      </div>\n   );\n }\n} \n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Components/Home\";\nimport SingleTracking from \"./Components/SingleTracking\";\nimport ProductsList from \"./Components/ProductsList\";\n// import NavBar from \"./Components/NavBar\";\n// import CategoryBar from \"./Components/CategoryBar\";\nimport SatisfactionClients from \"./Components/SatisfactionClients\";\nimport SingleOrder from \"./Components/SingleOrder\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <header className=\"App-header\">\n          <div className=\"App\">\n            <div className=\"header\">\n              <NavBar />\n              <CategoryBar />\n            </div>\n          </div>\n        </header> */}\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/singletracking\">\n              <SingleTracking />\n            </Route>\n            <Route path=\"/ProductsList\">\n              <ProductsList />\n            </Route>\n            <Route path=\"/SatisfactionClients\">\n              <SatisfactionClients />\n            </Route>\n            <Route path=\"/singleorder\">\n              <SingleOrder />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}